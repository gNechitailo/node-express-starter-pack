{
  "swagger": "2.0",
  "info": {
      "version": "1.0.0",
      "title": "MyApp-API",
      "description": "MyApp info"
  },
  "tags": [
    {
      "name": "Users",
      "description": "Users in the system"
    },
    {
      "name": "Auth",
      "description": "Authorization process in the system"
    },
    {
      "name": "Worker",
      "description": "All about the workers in the system"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
            "Users"
        ],
        "summary": "Register new regular user",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"body",
            "name":"body",
            "description": "User object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegularUser"
            }                  
          }
        ],
        "responses": {
          "201": {
            "description": "Added new user"
          },
          "422": {  
            "description": "Enter all information about the user"
          },
          "400": {
            "description":"Incorrect email format"
          },
          "400": {
            "description":"The password must consist of 8 or more characters"
          },
          "401": {
            "description":"Registration failed. Email address already in use"
          }
        }
      }
    },
    "user/confirm/:code": {
      "get": {
        "tags": [
            "Users"
        ],
        "summary": "The end of the registration process with confirmation code",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in": "params",
            "name":"code",
            "description": "Code completing the registration process",
            "required": true                 
          }
        ],
        "responses": {
          "202": {
            "description": "User confirm"
          }
        }
      }
    },
    "user/send": {
      "post": {
        "tags": [
            "Users"
        ],
        "summary": "Request to change the password",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"body",
            "name":"email",
            "description": "Email of user who requests a password change",
            "required": true,
            "type": "string",
            "example": "johndoe@example.com"               
          }
        ],
        "responses": {
          "201": {
            "description": "User password reset requested"
          },
          "400": {
            "description":"User is not registered"
          },
          "422": {  
            "description": "Please enter correct email"
          }
        }
      }
    },
    "user/reset-pass": {
      "post": {
        "tags": [
            "Users"
        ],
        "summary": "Reset password",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"body",
            "name":"password",
            "description": "Email of user who requests a password change",
            "required": true,
            "type": "string",
            "example": "passwordexample"               
          },
          {
            "in":"body",
            "name":"code",
            "description": "Reset code",
            "required": true,
            "type": "string",
            "example": "c0d30c0d3-c0d3-c0d3-c0d3-c0d3c0d3c0d3"               
          }
        ],
        "responses": {
          "201": {
            "description": "User password reset requested"
          },
          "400": {
            "description":"User is not registered"
          },
          "422": {  
            "description": "Please enter correct email"
          }
        }
      }
    },
    "user/:token": {
      "get": {
        "tags": [
            "Users"
        ],
        "summary": "Get user info",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"params",
            "name":"token",
            "description": "User auth token",
            "type": "number",
            "required": true,
            "example": "1"               
          }
        ],
        "responses": {
          "200": {
            "description":"User info"
          },
          "400": {
            "description":"Operation error"
          }
        }
      }
    },
    "user/check-pass": {
      "post": {
        "tags": [
            "Users"
        ],
        "summary": "Check user password for some actions in the system",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"body",
            "name":"email",
            "description": "User email",
            "type": "string",
            "required": true,
            "example": "email@example.com"               
          },
          {
            "in":"body",
            "name":"password",
            "description": "User password",
            "type": "string",
            "required": true,
            "example": "passwordexample"               
          }
        ],
        "responses": {
          "200": {
            "description":""
          },
          "400": {
            "description":""
          }
        }
      }
    },
    "user/update-pass": {
      "post": {
        "tags": [
            "Users"
        ],
        "summary": "Update user password",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in":"body",
            "name":"email",
            "description": "User email",
            "type": "string",
            "required": true,
            "example": "email@example.com"               
          },
          {
            "in":"body",
            "name":"passwordOld",
            "description": "User old password",
            "type": "string",
            "required": true,
            "example": "passwordexample"               
          },
          {
            "in":"body",
            "name":"password",
            "description": "User new password",
            "type": "string",
            "required": true,
            "example": "passwordexample"               
          }
        ],
        "responses": {
          "200": {
            "description":""
          },
          "400": {
            "description":""
          }
        }
      }
    },
    "auth/login": {
      "post": {
        "tags": [
            "Auth"
        ],
        "summary": "Authorizes the user in the system",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "User email",
            "type": "string",
            "required": true,
            "example": "johndoe@example.com"               
          },
          {
            "in": "body",
            "name": "password",
            "description": "User password",
            "required": true,
            "type": "string",
            "example": "passwordexample"               
          }
        ],
        "responses": {
          "200": {
            "description": "User info and JWT token"
          },
          "422": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "auth/logout/:token": {
      "delete": {
        "tags": [
            "Auth"
        ],
        "summary": "Logout the user in the system",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "in": "params",
            "name": "token",
            "description": "User authorization token",
            "type": "string",
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjcyIiwiZmlyc3ROYW1lIjoidGVzdCIsImxhc3ROYW1lIjoidGVzdCIsImVtYWlsIjoidGVzdDM4QHRlc3QuY29tIiwiaWF0IjoxNTc2NDg2NDY1LCJleHAiOjE1NzY0OTAwNjV9.X7w2zWUApFC5QKlxapA2YkTHn0yueSHY1CYrzU6Zys0"               
          }
        ],
        "responses": {
          "200": {
            "description": "User logout"
          },
          "400": {
            "description": "Token does not exist"
          }
        }
      }
    }
  },
  "definitions": {
    "RegularUser": {
      "type": "object",
      "properties": {
          "firstName": {
              "type": "string",
              "example": "Sarah"
          },
          "lastName": {
              "type": "string",
              "example": "Norton"
          },
          "email": {
              "type": "string",
              "example": "sarah-marah@example.com"
          },
          "password": {
              "type": "string",
              "example": "passwordexample"
          }
      }
    }
  }       
}